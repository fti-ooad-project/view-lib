#ifndef __RLIGHT_H__
#define __RLIGHT_H__
class RLightSourceType
{
	static const int RLIGHT_OMNI = 0 , RLIGHT_DIRECT = 1;
};
class RLightState
{
public:
	bool		_cast_shadow;
	RLightSourceType _type;
	RPassDesc _pass_desc;
public:
	f3			_pos = f3( 0.0f , 0.0f , 0.0f );
	f4			_colori = f4( 1.0f , 1.0f , 1.0f , 1.0f );
	f3			_v = f3( 0.0f , 0.0f , 0.0f );
	RLightState(){}
	RLightState( bool l , RLightSourceType const &type , RPassDesc const &pass_desc/* = RPassDesc( 512 , 512 , 1 , -1 , RBufferType::RBUFFER_FLOAT )*/
	, f4 c = f4( 1.0f , 1.0f , 1.0f , 1.0f )
	):
	_cast_shadow( l ) , _type( type ) , _pass_desc( pass_desc ) , _colori( c ) {}
	/*bool isCastingShadow() const { return _cast_shadow; }
	RLightSourceType getType() const { return _type; }
	RPassDesc const &getPassDesc() const { return _pass_desc; }
	f3 const &getPos() const { return _pos; }
	f3 &getPos(){ return _pos; }
	f4 const &getColori() const { return _colori; }
	f4 &getColori(){ return _colori; }
	f3 const &getV() const { return _v; }
	f3 &getV(){ return _v; }*/
};
#endif /* __RLIGHT_H__ */